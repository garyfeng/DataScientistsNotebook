version: '2.1'
services:
    mssql:
        # Microsoft SQL Server
        build:
            context: ./SQL
            dockerfile: Dockerfile_mssql
        image: mssql
        # command: "/bin/bash"
        stdin_open: true
        tty: true    
        ports:
            - "1433:1433"
        environment:
            ACCEPT_EULA: Y
            SA_PASSWORD: ${MSSQL_PASSWORD}
    # Jupyter Data Science Notebook
    jupyter:
        image: jupyter/datascience-notebook:latest
        volumes:
            - ${LOCAL_WORKING_DIR}:/home/jovyan/work
            - ${LOCAL_DATASETS}:/home/jovyan/work/datasets
            - ${LOCAL_MODULES}:/home/jovyan/work/modules
            - ${LOCAL_SSL_CERTS}:/etc/ssl/notebook
        ports:
            - "${PORT}:8888"
        # container_name:   jupyter_notebook
        environment:
            MSSQL_PASSWORD: ${MSSQL_PASSWORD}
            MSSQL_USER: ${MSSQL_USER}
            MSSQL_SERVERIP: ${MSSQL_SERVERIP}
        # command: "start-notebook.sh \
        #     --NotebookApp.password=${ACCESS_TOKEN} \
        #     --NotebookApp.certfile=/etc/ssl/notebook/jupyter.pem"
        # For local access, don't use certification
        command: "start-notebook.sh \
            --NotebookApp.password=${ACCESS_TOKEN}"
    # RStudio, v3.6.1, with knitr and other libraries + shiny server
    rstudio:
        # image: rocker/rstudio:3.6.2
        build:
            context: ./R
            dockerfile: Dockerfile
        image: rstudio
        volumes:
            - ${RSTUDIO_WORKING_DIR}:/home/rstudio
        ports:
            # for shiny
            - "3838:3838"
            # for rstudio
            - "8787:8787"
        environment:
            # no password required for local testing
            DISABLE_AUTH: "true"
            MSSQL_PASSWORD: ${MSSQL_PASSWORD}
            MSSQL_USER: ${MSSQL_USER}
            MSSQL_SERVERIP: ${MSSQL_SERVERIP}
    # # ES and Kibana for data sinc and visualization
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
        environment:
            - cluster.name=docker-cluster
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - discovery.type=single-node
        ports:
            - "9200:9200"
            - "9300:9300"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        #     nofile:
        #         soft: 65536
        #         hard: 65536
    kibana:
        image: docker.elastic.co/kibana/kibana:7.6.0
        ports:
            - "5601:5601"
        depends_on: 
            - elasticsearch

      